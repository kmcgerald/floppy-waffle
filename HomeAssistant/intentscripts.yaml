lightsTurnOnSet:
# house_room, unit, number
  speech:
    text: Ok I have turned on the light in the {{ house_room }}
  action:
    - service: light.turn_on
      data_template: 
        entity_id: light.{{ house_room | replace(" ","_") }}
        brightness_pct: "{{ number | default('100') | int }}"
        transition: 2
    - service: homeassistant.turn_on
      data_template:
        entity_id: switch.{{ house_room | replace(" ","_") }}

lightsTurnOff:
# house_room
  speech:
    text: Ok I have turned off the light in the {{ house_room }}
  action:
    - service: homeassistant.turn_off
      data_template:
        entity_id: light.{{ house_room | replace(" ","_") }}
        transition: 2
    - service: homeassistant.turn_off
      data_template:
        entity_id: switch.{{ house_room | replace(" ","_") }}

lightsTurnUp:
# house_room
  speech: 
    text: I have turned up the light in the {{ house_room }}
  action: 
    service: light.turn_on
    data_template: 
      entity_id: light.{{ house_room | replace(" ","_") }}
      brightness_pct: '{{ state_attr("light." + house_room | replace(" ","_"), "brightness_pct") + 10 }}'
      transition: 2

#lightsTurnDown:
# house_room

turnOnMediaPlayer:
# device, house_room
  speech:
    text: >
      {% if device is defined %} 
        OK I have turned on the {{ device }}
      {% elif house_room is defined %}
        OK I have turned on the tv in the {{ house_room }}
      {% else %}
        I don't know which one you want me to turn on.
      {% endif %}
  action: 
    service: media_player.turn_on 
    data_template:
      entity_id: >
        {% if device is defined %}
           media_player.{{ device | replace(" ","_") }}
        {% endif %}
        
turnMediaPlayerOff:
# device, house_room
  speech: 
    text: >
      {% if device is defined %}
        OK I have turned off the {{ device }}
      {% elif house_room is defined %}
        OK I have turned off the tv in the {{ house_room }}
      {% else %}
        I don't know which one you want me to turn off.
      {% endif %}
  action:
    service: media_player.turn_off
    data_template:
      entity_id: >
        {% if device is defined %}
          media_player.{{ device | replace(" ","_") }}
        {% elif house_room is defined %}
          {%- for state in states.media_player if house_room.lower() in state.name.lower() %}
             media_player.{{ state.name | replace(" ","_") }}
          {%- endfor -%}
        {% endif %}

volumeUp:
# device, house_room
  speech:
    text: >
      {% if device is defined %}
        OK I have raised the volume for the {{ device }}
      {% elif house_room is defined %}  
        OK I have raised the volume for the tv in the {{ house_room }}
      {% else %}
        I don't know which one you want me to raise the volume for.
      {% endif %}
  action:  
    service: media_player.volume_up
    data_template:
      entity_id: >
        {% if device is defined %}
          media_player.{{ device | replace(" ","_") }}
        {% elif house_room is defined %}
          {%- for state in states.media_player if house_room.lower() in state.name.lower() %}
             media_player.{{ state.name | replace(" ","_") }}
          {%- endfor -%}
        {% endif %}

volumeDown:
# device, house_room
  speech:
    text: >
      {% if device is defined %}
        OK I have lowered the volume for the {{ device }}
      {% elif house_room is defined %}  
        OK I have lowered the volume for the tv in the {{ house_room }}
      {% else %}
        I don't know which one you want me to lower the volume for.
      {% endif %}
  action:  
    service: media_player.volume_down
    data_template:
      entity_id: >
        {% if device is defined %}
          media_player.{{ device | replace(" ","_") }}
        {% elif house_room is defined %}
          {%- for state in states.media_player if house_room.lower() in state.name.lower() %}
             media_player.{{ state.name | replace(" ","_") }}
          {%- endfor -%}
        {% endif %}

mute:
# device, house_room
  speech: 
    text: >
      {% if device is defined %}
        OK I have muted the {{ device }}
      {% elif house_room is defined %}
        OK I have muted the tv in the {{ house_room }}
      {% else %}
        I don't know which one you want me to mute.
      {% endif %}
  action:
    service: media_player.volume_mute
    data_template:
      entity_id: >
        {% if device is defined %}
          media_player.{{ device | replace(" ","_") }}
        {% elif house_room is defined %}
          {%- for state in states.media_player if house_room.lower() in state.name.lower() %}
             media_player.{{ state.name | replace(" ","_") }}
          {%- endfor -%}
        {% endif %}
      is_volume_muted: true

#LocationQuery:
#  # aLocation, searchSubject
#  speech:
#    text: >
#      {%- for state in states.device_tracker if state.name.lower() == searchSubject.lower() -%}
#          {{ state.name }} is at {{ state.state }}  
#      {%- else -%}
#          Sorry, I don't have any trackers registered 
#      {%- endfor -%}

LocationQuery:
  # aLocation, searchSubject
  speech:
    text: >
      {%- for state in states.device_tracker if state.name.lower() == searchSubject.lower() -%}
        {% if state.state.lower() == aLocation.lower() %}
          Yes {{ state.name }} is at {{ state.state }}  
        {%- else -%}
          No {{ state.name }} is at {{ state.state }}
        {% endif %}
      {%- else -%}
          Sorry, I don't have any trackers registered 
      {%- endfor -%}

checkStatus:
  # Object, Attribute(temperature, humidity) speech:
  speech:
    text: >
      {% if " tv" in Object.lower() %}
        {% for state in states.media_player if state.name.lower() == Object.lower() %}
          The {{ state.name }} is {{ state.state }} 
        {% endfor %}
      {% else %} 
        {%- for state in states.sensor if Object.lower() in state.name.lower() -%}
          "The {{ state.name }} is {{ state.state }}. " 
        {%- endfor -%}
        {%- for state in states.binary_sensor if Object.lower() in state.name.lower() -%}
          "The {{ state.name }} is {{ state.state }}. "
        {%- endfor -%}
        {%- for state in states.switch if Object.lower() in state.name.lower() -%}
          "The {{ state.name }} is {{ state.state }}. "
        {%- endfor -%}
        {%- for state in states.light if Object.lower() in state.name.lower() -%}
          "The {{ state.name }} is {{ state.state }}. "
        {%- endfor -%}
        {% for state in states.media_player if Object.lower() in state.name.lower() -%}
          The {{ state.name }} is {{ state.state }} 
        {% endfor %}
      {% endif %}

searchWeatherForecast:
  speech:
    type: plain
    text: >
      The weather is currently
      {{ states('sensor.dark_sky_temperature') | round(0) }}
      degrees outside and {{ states('sensor.dark_sky_summary') }}.
      The high today will be
      {{ states('sensor.dark_sky_daily_high_temperature') | round(0)}}
      and {{ states('sensor.dark_sky_hourly_summary') }}

searchWeatherForecastCondition:
# forecast_condition_name
  speech:
    type: plain
    text: >
      {% if "sun" in forecast_condition_name.lower() %}
          Checking for sun.
        {% if "sun" in (states.sensor.dark_sky_summary | lower()) %}
          It is currently sunny.
        {% else %}
          No it is not sunny. it is {{ states('sensor.dark_sky_summary') }}
        {% endif %}
        {% if "sun" in (states.sensor.dark_sky_minutely_summary | lower()) %}  
          It will be {{ states('sensor.dark_sky_minutely_summary') }}
        {% endif %}
        {% if "sun" in (states.sensor.dark_sky_hourly_summary | lower()) %}
          {{ states('sensor.dark_sky_hourly_summary') }}
        {% endif %}
        {% if "sun" in (states.sensor.dark_sky_daily_summary | lower()) %}
          {{ states('sensor.dark_sky_daily_summary') }}
        {% endif %}
      {% endif %}
      {% if "cloud" in forecast_condition_name.lower() %}
          Checking for clouds.
        {% if "cloud" in (states.sensor.dark_sky_summary | lower()) %}
          It is currently {{ states('sensor.dark_sky_summary') }}.
          The cloud cover is {{ states('sensor.dark_sky_humidity') | round(0) }} percent
        {% else %}
          No it is not cloudy. It is {{ states('sensor.dark_sky_summary') }}
          The cloud cover is {{ states('sensor.dark_sky_humidity') | round(0) }} percent
        {% endif %}
        {% if "cloud" in (states.sensor.dark_sky_minutely_summary | lower()) %}
          It will be {{ states('sensor.dark_sky_minutely_summary') }}
        {% endif %}
        {% if "cloud" in (states.sensor.dark_sky_hourly_summary | lower()) %}
          {{ states('sensor.dark_sky_hourly_summary') }}
        {% endif %}
        {% if "cloud" in (states.sensor.dark_sky_daily_summary | lower()) %}
          {{ states('sensor.dark_sky_daily_summary') }}
        {% endif %}
      {% endif %}
      {% if "humid" in forecast_condition_name.lower() %}
          Checking for humid.
        {% if "humid" in (states.sensor.dark_sky_summary | lower()) %}
          It is currently {{ states('sensor.dark_sky_summary') }}. 
          The humidity level is {{ states('sensor.dark_sky_humidity') | round(0) }} percent
        {% else %}
          No it is not humid. It is {{ states('sensor.dark_sky_summary') }}
          The humidity level is {{ states('sensor.dark_sky_humidity') | round(0) }} percent
        {% endif %}
        {% if "humid" in (states.sensor.dark_sky_minutely_summary | lower()) %}
          It will be {{ states('sensor.dark_sky_minutely_summary') }}
        {% endif %}
        {% if "humid" in (states.sensor.dark_sky_hourly_summary | lower()) %}
          {{ states('sensor.dark_sky_hourly_summary') }}
        {% endif %}
        {% if "humid" in (states.sensor.dark_sky_daily_summary | lower()) %}
          {{ states('sensor.dark_sky_daily_summary') }}
        {% endif %}
      {% endif %}
      {% if "rain" in forecast_condition_name.lower() %}
          Checking for rain.
        {% if "rain" in (states.sensor.dark_sky_summary | lower()) %}
          It is currently raining.
        {% else %}
          No it is not raining. it is {{ states('sensor.dark_sky_summary') }}
        {% endif %}
        {% if "rain" in (states.sensor.dark_sky_minutely_summary | lower()) %}
          It will be {{ states('sensor.dark_sky_minutely_summary') }}
        {% endif %}
        {% if "rain" in (states.sensor.dark_sky_hourly_summary | lower()) %}
          {{ states('sensor.dark_sky_hourly_summary') }}
        {% endif %}
        {% if "rain" in (states.sensor.dark_sky_daily_summary | lower()) %}
          {{ states('sensor.dark_sky_daily_summary') }}
        {% endif %}
      {% endif %}
      {% if "snow" in forecast_condition_name.lower() %}
          Checking for snow.
        {% if "snow" in (states.sensor.dark_sky_summary | lower()) %}
          It is currently snowing.
        {% else %}  
          No it is not snowing. it is {{ states('sensor.dark_sky_summary') }}
        {% endif %}
        {% if "snow" in (states.sensor.dark_sky_minutely_summary | lower()) %}
         It will be {{ states('sensor.dark_sky_minutely_summary') }}
        {% endif %}
        {% if "snow" in (states.sensor.dark_sky_hourly_summary | lower()) %}
          {{ states('sensor.dark_sky_hourly_summary') }}
        {% endif %}
        {% if "snow" in (states.sensor.dark_sky_daily_summary | lower()) %}
          {{ states('sensor.dark_sky_daily_summary') }}
        {% endif %}
      {% endif %}
searchWeatherForecastItem:
# forecast_item, forecast_start_datetime, forecast_locality, forecast_region,
# items in dictionary: umbrella, hat, coat, raincoat, sunglasses, sunhat, 
  speech:
    type: plain
    text: >
      {% if forecast_item.lower() in ['umbrella', 'raincoat'] %}
        {% if "rain" in (states.sensor.dark_sky_summary | lower()) %}
          Yes because it is currently raining.
        {% else %}
          No it is not raining. It is {{ states('sensor.dark_sky_summary') }}
        {% endif %}
        {% if "rain" in (states.sensor.dark_sky_minutely_summary | lower()) %}
          It will be {{ states('sensor.dark_sky_minutely_summary') }}
        {% endif %}
        {% if "rain" in (states.sensor.dark_sky_hourly_summary | lower()) %}
          {{ states('sensor.dark_sky_hourly_summary') }}
        {% endif %}
        {% if "rain" in (states.sensor.dark_sky_daily_summary | lower()) %}
          {{ states('sensor.dark_sky_daily_summary') }}
        {% endif %}
      {% elif forecast_item.lower() in ['sunglasses', 'parasol', 'sunscreen'] %}
        {% if "sun" in (states.sensor.dark_sky_summary | lower()) %}
          Yes it is currently sunny.
        {% else %}
          No it is not sunny. It is {{ states('sensor.dark_sky_summary') }}
        {% endif %}
        {% if "sun" in (states.sensor.dark_sky_minutely_summary | lower()) %}
          It will be {{ states('sensor.dark_sky_minutely_summary') }}
        {% endif %}
        {% if "sun" in (states.sensor.dark_sky_hourly_summary | lower()) %}
          {{ states('sensor.dark_sky_hourly_summary') }}
        {% endif %}
        {% if "sun" in (states.sensor.dark_sky_daily_summary | lower()) %}
          {{ states('sensor.dark_sky_daily_summary') }}
        {% endif %}
      {% else %}
        The weather is currently
        {{ states('sensor.dark_sky_temperature') | round(0) }}
        degrees outside and {{ states('sensor.dark_sky_summary') }}.
        The high today will be
        {{ states('sensor.dark_sky_daily_high_temperature') | round(0) }}
        and {{ states('sensor.dark_sky_hourly_summary') }}
      {% endif %}

searchWeatherForecastTemperature:
# forecast_temperature_name, forecast_locality, forecast_region, forecast_start_datetime
  speech:
    type: plain
    text: >
      The temperature is currently
      {{ states('sensor.dark_sky_temperature') | round(0) }}
      degrees outside and {{ states('sensor.dark_sky_summary') }}.
      It feels like {{ states('sensor.dark_sky_apparent_temperature') | round(0) }}.
      The high today is
      {{ states('sensor.dark_sky_daily_high_temperature') | round(0)}}
      and will feel like {{ states('sensor.dark_sky_daily_high_apparent_temperature') | round(0) }}.
      The low today is 
      {{ states('sensor.dark_sky_daily_low_temperature') | round(0) }}
      and will feel like {{ states('sensor.dark_sky_daily_low_apparent_temperature') | round(0) }}. 

SetTimer:
  speech:
    type: plain
    text: I have started the timer.
  action:
    service: script.set_timer
    data_template:
      name: "{{ timer_name }}"
      duration: "{{ timer_duration }}"
      seconds: "{{ timer_duration.seconds }}"
      minutes: "{{ timer_duration.minutes }}"
      hours: "{{ timer_duration.hours }}"
